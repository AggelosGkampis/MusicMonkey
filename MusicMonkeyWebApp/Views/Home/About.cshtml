@{
    Layout = "~/Views/Shared/_Layout.cshtml";
    ViewBag.Title = "About";
}

<!DOCTYPE html>

<html>
<head>
    <meta name="viewport" content="width=device-width" />
    <title></title>
</head>
<body>

    <div class="container">

        <div class="col-12 text-center">
            <h3>Track Popularity</h3>
            <hr />
            <div>
                <canvas id="myChart" width="200" height="100"></canvas>
                @*<button onclick="fetchData()">Fetch now </button>*@
            </div>
        </div>
    </div>



    <script src="https://cdn.jsdelivr.net/npm/chart.js"></script>
    <script>

        var settings = {
            "url": "https://localhost:44314/api/TrackApi",
            "method": "GET",
            "timeout": 0,
        };

        $.ajax(settings).done(function (tracks) {
            console.log(tracks);
            const popularity = tracks.map(x => x.popularity);
        });

       

        //async function fetchData() {
        //    const url = 'https://localhost:44314/api/TrackApi';
        //    const response = await fetch(url);
        //    const datapoints = await response.json();
        //    console.log(datapoints);
        //    return datapoints;
        //}

        const labels = ['Eminem',
            'Shakira',
            '2pac',
            'Linking Park',
            'AC/DC',
            'METALICA',
        ];

        const data = {
            labels: labels,
            datasets: [{
                label: 'Track Popularity',
                backgroundColor: 'rgb(150, 200, 12)',
                borderColor: 'rgb(150, 99, 132)',
                data: [0, 1, 2, 3, 4, 5],
            }]
        };

        const config = {
            type: 'bar',
            data: data,
            options: {
                indexAxis: 'y',
            }
        };

        const myChart = new Chart(
            document.getElementById('myChart'),
            config
        );
    </script>

</body>
</html>

@*[HttpGet]

public ActionResult GetAllTracksChart(int count, string sortOrder)
{
    var tracks = unit.Tracks
                .GetTracksWithEverything()
                .Select(x => new Track { Id = x.Id, Title = x.Title, DurationSecs = x.DurationSecs, Popularity = x.Popularity})
                .Take(count);

    switch (sortOrder)
    {
        case "ASC": Tracks = Tracks.OrderBy(x => Popularity).ToList(); break;
        case "DESC": Tracks = Tracks.OrderByDescending(x => Popularity).ToList(); break;
        default : Tracks = Tracks.OrderBy(x => Popularity).ToList(); break;


    }

        return Tracks

}*@